plugins {
  id "org.jetbrains.kotlin.jvm" version "1.3.21"
  id "java"
  id "project-report"
  id "com.github.ben-manes.versions" version "0.21.0"
  id "com.google.protobuf" version "0.8.8"
  id "idea"
}

group = 'dev.vihang'
version = '1.0.0-SNAPSHOT'

repositories {
  mavenCentral()
  jcenter()
}

sourceCompatibility = 11
targetCompatibility = 11
tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}
ext {
  grpcVersion = "1.19.0"
  kotlinVersion = "1.3.21"
  slf4jVersion="1.7.26"
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  implementation "io.grpc:grpc-netty-shaded:$grpcVersion"
  implementation "io.grpc:grpc-protobuf:$grpcVersion"
  implementation "io.grpc:grpc-stub:$grpcVersion"
  implementation "io.grpc:grpc-core:$grpcVersion"
  implementation 'javax.annotation:javax.annotation-api:1.3.2'

  testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
  testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
}

protobuf {
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
    }
  }
  protoc { artifact = 'com.google.protobuf:protoc:3.7.0' }
  generateProtoTasks {
    all()*.plugins {
      grpc {}
    }
  }
}

clean {
  delete protobuf.generatedFilesBaseDir
}

dependencyUpdates.resolutionStrategy {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'redhat'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}